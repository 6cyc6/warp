#usda 1.0
(
    defaultPrim = "World"
    upAxis = "Y"
)

def Xform "World"
{
    def Material "OceanMaterial"
    {
        token outputs:mdl:displacement.connect = </World/OceanMaterial/Shader.outputs:out>
        token outputs:mdl:surface.connect = </World/OceanMaterial/Shader.outputs:out>
        token outputs:mdl:volume.connect = </World/OceanMaterial/Shader.outputs:out>

        def Shader "Shader"
        {
            uniform token info:implementationSource = "sourceAsset"
            uniform asset info:mdl:sourceAsset = @OmniSurface.mdl@
            uniform token info:mdl:sourceAsset:subIdentifier = "OmniSurface"

            float inputs:diffuse_reflection_weight = 0 (
                customData = {
                    float default = 0.8
                    dictionary range = {
                        float max = 1
                        float min = 0
                    }
                }
                displayGroup = "Base"
                displayName = "Weight"
                hidden = false
            )
            bool inputs:enable_specular_transmission = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Transmission"
                displayName = "Enable Transmission"
                doc = "Enables the use of transmission"
                hidden = false
            )
            float inputs:specular_reflection_ior = 1.325 (
                customData = {
                    float default = 1.5
                    dictionary range = {
                        float max = 3.4028235e38
                        float min = 0
                    }
                    dictionary soft_range = {
                        float max = 5
                        float min = 1
                    }
                }
                displayGroup = "Specular"
                displayName = "IOR"
                hidden = false
            )
            float inputs:specular_transmission_weight = 0.5 (
                customData = {
                    float default = 0
                    dictionary range = {
                        float max = 1
                        float min = 0
                    }
                }
                displayGroup = "Transmission"
                displayName = "Weight"
                hidden = false
            )
            bool inputs:thin_walled = 1 (
                customData = {
                    bool default = 0
                }
                displayGroup = "Geometry"
                displayName = "Thin Walled"
                doc = "Thin surface with no interior."
                hidden = false
            )
            token outputs:out (
                renderType = "material"
            )
        }
    }
}
